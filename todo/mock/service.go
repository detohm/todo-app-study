// Code generated by MockGen. DO NOT EDIT.
// Source: ./service.go

// Package mock is a generated GoMock package.
package mock

import (
	reflect "reflect"

	todo "github.com/detohm/todo-app-study/todo"
	gomock "github.com/golang/mock/gomock"
)

// MockService is a mock of Service interface.
type MockService struct {
	ctrl     *gomock.Controller
	recorder *MockServiceMockRecorder
}

// MockServiceMockRecorder is the mock recorder for MockService.
type MockServiceMockRecorder struct {
	mock *MockService
}

// NewMockService creates a new mock instance.
func NewMockService(ctrl *gomock.Controller) *MockService {
	mock := &MockService{ctrl: ctrl}
	mock.recorder = &MockServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockService) EXPECT() *MockServiceMockRecorder {
	return m.recorder
}

// CompleteToDo mocks base method.
func (m *MockService) CompleteToDo(arg0 int64) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CompleteToDo", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// CompleteToDo indicates an expected call of CompleteToDo.
func (mr *MockServiceMockRecorder) CompleteToDo(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CompleteToDo", reflect.TypeOf((*MockService)(nil).CompleteToDo), arg0)
}

// CreateToDo mocks base method.
func (m *MockService) CreateToDo(arg0 todo.ToDo) (int64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateToDo", arg0)
	ret0, _ := ret[0].(int64)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateToDo indicates an expected call of CreateToDo.
func (mr *MockServiceMockRecorder) CreateToDo(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateToDo", reflect.TypeOf((*MockService)(nil).CreateToDo), arg0)
}

// DeleteToDo mocks base method.
func (m *MockService) DeleteToDo(arg0 int64) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteToDo", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteToDo indicates an expected call of DeleteToDo.
func (mr *MockServiceMockRecorder) DeleteToDo(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteToDo", reflect.TypeOf((*MockService)(nil).DeleteToDo), arg0)
}

// GetToDoList mocks base method.
func (m *MockService) GetToDoList() ([]todo.ToDo, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetToDoList")
	ret0, _ := ret[0].([]todo.ToDo)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetToDoList indicates an expected call of GetToDoList.
func (mr *MockServiceMockRecorder) GetToDoList() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetToDoList", reflect.TypeOf((*MockService)(nil).GetToDoList))
}
